{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["audioClips","keyCode","keyTrigger","id","url","Pad","clip","volume","setRecording","useState","active","setActive","useEffect","document","addEventListener","handleKeyPress","removeEventListener","e","playSound","audioTag","getElementById","currentTime","play","setTimeout","prev","onClick","className","src","App","setVolume","recording","speed","setSpeed","map","type","step","onChange","event","target","value","max","min","index","recordArray","split","interval","setInterval","clearInterval","length","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5f438f85.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n\nconst audioClips = [\n  {\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Heater-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n  },\n  {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Heater-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n  },\n  {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Heater-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n  },\n  {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Heater-4',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n  },\n  {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Clap',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n  },\n  {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n  },\n  {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: \"Kick-n'-Hat\",\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n  },\n  {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n  },\n  {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n  }\n];\n\n\nfunction App() {\n\n  const [volume, setVolume] = useState(1);\n  const [recording, setRecording] = useState(\"\");\n  const [speed, setSpeed] = useState(0.5);\n\n  const playRecording = () => {\n    let index = 0;\n    let recordArray = recording.split(' ');\n    const interval = setInterval(() => {\n    const audioTag = document.getElementById(recordArray[index]);\n    audioTag.volume = volume;\n    audioTag.currentTime = 0;\n    audioTag.play();\n    index++;\n    }, speed * 600);\n    setTimeout(() => clearInterval(interval), 600 * speed * recordArray.length -1);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Drum Machine</h1>\n      <div id=\"drum-machine\" className=\"drum-machine\">\n        {audioClips.map(clip => {\n          return <Pad key = {clip.id} clip = {clip} volume={volume} setRecording = {setRecording}/>\n        })}\n      </div>\n\n          <div className=\"ip-section\">\n            <h3>Volume</h3>\n            <input type = \"range\"\n                  step = \"0.01\" \n                  onChange={(event) => setVolume(event.target.value)} \n                  value={volume} \n                  max=\"1\" \n                  min=\"0\" \n                  className=\"volume\"\n                  />\n          </div>\n\n          <div className=\"record\">\n            <h3>Sequence: {recording}</h3>\n            <button onClick={playRecording}>Play</button>\n            <button onClick={() => setRecording(\"\")}>Clear</button>\n            <br/>\n            <h4>Speed</h4>\n            <input type = \"range\"\n                   step = \"0.01\" \n                   onChange={(event) => setSpeed(event.target.value)} \n                   value={speed} \n                   max=\"1.2\" \n                   min=\"0.1\" \n                   className=\"volume\"\n            />\n          </div>\n          \n          <div className=\"footer\">\n            <footer>\n              <p className=\"footer__text\">\n              Â© 2021 - Website developed by <a href=\"https://github.com/bishalmallick\" target=\"_blank\" rel=\"noopener noreferrer\"> Bishal Mallick</a>\n              </p>\n            </footer>\n          </div>\n    </div>\n  );\n}\n\nconst Pad = ({clip, volume, setRecording}) => {\n\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    }\n  })\n\n  const handleKeyPress = (e) => {\n    if(e.keyCode === clip.keyCode){\n      playSound();\n    }\n  }\n\n  const playSound = () => {\n    const audioTag = document.getElementById(clip.keyTrigger);\n    audioTag.volume = volume;\n    audioTag.currentTime = 0;\n    audioTag.play();\n    setActive(true);\n    setTimeout(() => setActive(false), 200);\n    setRecording((prev) =>  prev + clip.keyTrigger + \" \");\n  }\n\n\n  return(\n    <div onClick = {playSound} className={`drum ${active && \"active\"}`}>\n      <audio id={clip.keyTrigger} src={clip.url} />\n      {clip.keyTrigger}\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}